"use strict";function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_unsupportedIterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArray(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t))return _arrayLikeToArray(t)}function _createForOfIteratorHelper(t,e){var a="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!a){if(Array.isArray(t)||(a=_unsupportedIterableToArray(t))||e&&t&&"number"==typeof t.length){a&&(t=a);var r=0,n=function(){};return{s:n,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,o=!0,i=!1;return{s:function(){a=a.call(t)},n:function(){var t=a.next();return o=t.done,t},e:function(t){i=!0,s=t},f:function(){try{o||null==a.return||a.return()}finally{if(i)throw s}}}}function _unsupportedIterableToArray(t,e){if(t){if("string"==typeof t)return _arrayLikeToArray(t,e);var a=Object.prototype.toString.call(t).slice(8,-1);return"Object"===a&&t.constructor&&(a=t.constructor.name),"Map"===a||"Set"===a?Array.from(t):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(t,e):void 0}}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var a=0,r=new Array(e);a<e;a++)r[a]=t[a];return r}var setupGame=function(t){var e,a="<div>",r=!1,n=_createForOfIteratorHelper(t);try{for(n.s();!(e=n.n()).done;){" "===e.value?(r=!0,a+="</div><div>"):(a+='<span class="'.concat(r?"has-space":"",'"></span>'),r=!1)}}catch(t){n.e(t)}finally{n.f()}a+="</div>",$(".guessbox").html(a)},getPhrases=function(t){$.getJSON("./phrazes.json",function(e){t(e.phrases)}).fail(function(){console.log("An error has occurred.")})};$(function(){var t,e,a,r,n,s=new Date,o=pattern[s.getDay()],i=0,u=0,c=1,p=!1;getPhrases(function(e){t=e,l()});var l=function(){e=t[todaysDayInYear()%t.length].toUpperCase(),a=e.replaceAll(" ",""),r=a.length,setupGame(e),initProgress(r);for(var s=getTodaysStat();i<=s.counter;)m(!0);s.isComplete?(s.didWin?f(s.grade):g(grades.F),$(".guess-now").prop("disabled",!0)):s.guessCnt?(c=s.guessCnt,onGuess(c)):($(".popup.instructions").show(),$(".popup.instructions .play-now").on("click",function(){s.isComplete||s.guessCnt||void 0!==n&&clearTimeout(n),n=setTimeout(function(){return m()},LETTER_TIMER),updateProgress(u,r),$(".popup.instructions").hide()}))},d=function(){p||(clearTimeout(n),n=void 0,setStats(grades.F),g(),p=!0)},g=function(){$(".error-popup h2").addClass(grades.F),$(".error-popup p").text(e),displayStats($(".error-popup .stats")),$(".error-popup").show()},f=function(t){$(".win-popup h2").addClass(t),displayStats($(".win-popup .stats")),$(".win-popup").show()},m=function t(e){var s=o[i%o.length];e||setGameState(i);var c=a.indexOf(s);if(-1!=c){a=a.replace(s,s.toLowerCase());var p=$(".guessbox span").get(c);$(p).text(s),i++,updateProgress(++u,r),e||(void 0!==n&&clearTimeout(n),n=setTimeout(function(){return t(e)},LETTER_TIMER))}else i++,t(e);u==r&&d()};$(".guess-now").on("click",function(){onGuess(),clearTimeout(n),n=void 0}),$(".guess-check").on("click",function(){var t=onGuessSubmit(a);t?function(){if(!p){var t=u/r*100,e=getGrade(t+=5*(c-1));setStats(e),f(e),p=!0}}():!1===t&&(c++,$(".guess-chances span").slice(0,(c||1)-1).addClass("lost"),updateProgressFromWrongGuess(u,r,c),setGameStateGuess(c),$(".guessbox").addClass("wrong-guess"),setTimeout(function(){$(".guessbox").removeClass("wrong-guess"),$(".guessbox input").val(""),$(".guessbox input").first().focus(),c>MAX_GUESS&&d()},1e3))}),$(".main-section").on("keyup","input[type='text']",function(t){var e=$(t.target).closest(".guessbox").find("input[type='text']");8==t.keyCode?e.eq(Math.max(e.index(t.target)-1,0)).val("").focus():e.eq(e.index(t.target)+1).focus()})});var setGameState=function(t){localStorage.setItem(items.GAME_STATE,'{ "counter": '.concat(t," }"))},getTodaysStat=function(){var t=localStorage.getItem(items.LAST_PLAYED),e=getTodaysDt();return t!=e&&(localStorage.setItem(items.LAST_PLAYED,e),localStorage.removeItem(items.GAME_STATE)),getObjectItem(items.GAME_STATE)},getObjectItem=function(t){var e=localStorage.getItem(t)||"{}";return $.parseJSON(e)},onGuess=function(t){setToGuessMode(),$(".progress-bar-timer").addClass("hide"),$(".guess-chances span").slice(0,(t||1)-1).addClass("lost"),setGameStateGuess(t||1),$(".guessbox").find("span").each(function(){$(this).text().trim().length||$(this).html("<input type='text' maxlength='1'>")}),$(".guessbox input").first().focus()},onGuessSubmit=function(t){var e="",a=!1;if($(".guessbox span").each(function(){$(this).find("input").length?(""===$(this).find("input").val()&&($(this).find("input[type='text']").each(function(t,e){$(e).val()||$(e).addClass("empty"),setTimeout(function(){$(".guessbox input.empty").first().focus(),$(".guessbox input").removeClass("empty")},300)}),a=!0),e+=$(this).find("input").val()||""):e+=$(this).text()||""}),!a)return e.toUpperCase()==t.toUpperCase()},setToGuessMode=function(){$(".main-section").addClass("guess-mode"),$(".guess-now").remove()},setGameStateGuess=function(t){var e=getObjectItem(items.GAME_STATE);e.guessCnt=t,localStorage.setItem(items.GAME_STATE,JSON.stringify(e))},setStats=function(t){$(".guess-popup").hide();var e=getObjectItem(items.GAME_STATE);e.didWin=t!=grades.F,e.isComplete=!0,e.grade=t,localStorage.setItem(items.GAME_STATE,JSON.stringify(e));var a=getObjectItem(items.GRADES),r=a[t]||0;a[t]=r+1,localStorage.setItem(items.GRADES,JSON.stringify(a))},getGrade=function(t){return t>=0&&t<=40?grades.A:t>40&&t<=70?grades.B:t>70&&t<=90?grades.C:grades.D},displayStats=function(t){var e=getObjectItem(items.GRADES),a=Object.values(e),r=Math.max.apply(Math,_toConsumableArray(a))||5,n='\n        <div class="chart">\n            <span data-grade="'.concat(grades.A,'">&nbsp;</span>\n            <span data-grade="').concat(grades.B,'">&nbsp;</span>\n            <span data-grade="').concat(grades.C,'">&nbsp;</span>\n            <span data-grade="').concat(grades.D,'">&nbsp;</span>\n            <span data-grade="').concat(grades.F,'">&nbsp;</span>\n        </div>\n        <div class="chart-labels">\n            <span class="').concat(grades.A,'"></span>\n            <span class="').concat(grades.B,'"></span>\n            <span class="').concat(grades.C,'"></span>\n            <span class="').concat(grades.D,'"></span>\n            <span class="').concat(grades.F,'"></span>\n        </div>\n    ');t.html(n),t.find(".chart span").each(function(t,a){var n=$(a).attr("data-grade"),s=(e[n]||0)/r*100;$(a).css("height","".concat(s,"px")),e[n]&&$(a).text(e[n])})},updateProgress=function(t,e){var a=t/e*100,r=Math.min((t+1)/e*100,100);$(".progress-bar-cover").css("width","".concat(a,"%")),$(".progress-bar-timer").css("width","".concat(r,"%"))},updateProgressFromWrongGuess=function(t,e,a){var r=t/e*100;r+=5*(a-1),$(".progress-bar-cover").css("width","".concat(r,"%"))},initProgress=function(t){for(var e=1/t*100,a=0;a<t-1;a++)$(".progress-bar").append('<small class="divider" style="left:'.concat(e*(a+1),'%"></small>'))},getTodaysDt=function(){var t=new Date;return"".concat(t.getMonth()+1,"/").concat(t.getDate(),"/").concat(t.getFullYear())},todaysDayInYear=function(){var t=new Date,e=new Date(t.getFullYear(),0,0),a=t-e;return Math.floor(a/864e5)},randomizeItems=function(t){return t.map(function(t){return{sort:Math.random(),value:t}}).sort(function(t,e){return t.sort-e.sort}).map(function(t){return t.value})},pattern=[["D","L","Z","F","E","K","B","O","P","V","T","G","S","A","C","U","N","I","H","R","Y","J","M","X","Q","W"],["H","M","E","D","J","O","N","R","X","K","U","Y","V","S","B","W","F","T","A","P","Q","L","I","Z","C","G"],["Z","M","K","N","X","G","U","S","E","R","B","V","A","P","T","I","C","F","D","W","L","O","J","Y","H","Q"],["N","X","B","R","Y","T","L","I","S","P","E","C","V","J","H","Z","A","G","W","F","U","M","O","K","D","Q"],["I","N","F","Q","C","U","R","O","D","H","A","Z","L","K","V","J","S","M","G","P","Y","X","T","B","E","W"],["F","Q","V","H","K","Y","C","J","X","Z","M","R","W","E","N","S","P","I","B","U","O","A","G","D","T","L"],["W","G","Y","U","M","N","H","I","K","Z","O","R","B","Q","C","P","J","F","S","T","L","A","X","E","D","V"]],items={LAST_PLAYED:"last-played-date",GAME_STATE:"game-state",GRADES:"grades"},grades={A:"grade-a",B:"grade-b",C:"grade-c",D:"grade-d",F:"grade-f"},MAX_GUESS=3,LETTER_TIMER=5e3,GUESS_PENALTY=5;
